Starting audit...
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:8:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:8:23: Parameter players should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:8:45: Parameter harta should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:13:53: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:13:89: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:14:60: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:24:60: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:30: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:30:148: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:33: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:33:148: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:36: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:36:148: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:39: Line is longer than 100 characters (found 150). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:39:148: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:44:33: '{' at column 33 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:45: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:45:152: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:46: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:46:152: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:51: Line is longer than 100 characters (found 155). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:53: Line is longer than 100 characters (found 156). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:53:148: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:54:29: '}' at column 29 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally). [RightCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:56:33: '{' at column 33 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:58:37: '{' at column 37 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:59: Line is longer than 100 characters (found 158). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:59:156: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:60: Line is longer than 100 characters (found 165). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:67:31: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:67:56: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:67:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:42: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:53: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:53: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:56: '-' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:57: '-' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:83: '-' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:84: '-' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:110: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:111: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:69:111: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:72:31: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:72:56: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:72:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74: Line is longer than 100 characters (found 115). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:42: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:53: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:53: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:56: '-' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:57: '-' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:83: '-' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:84: '-' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:110: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:111: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:74:111: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:83:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'moveplayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'moveplayers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:83:29: Parameter players should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:83:51: Parameter move should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:85:41: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:85:77: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Game.java:101:41: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:16: Line is longer than 100 characters (found 120). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:16:12: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:17: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:28:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:32:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getmRounds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getmRounds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:36:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getNrpers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getNrpers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:40:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getLength' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:44:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getWidth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getWidth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:48:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getPlayers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:52:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getTypeground' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getTypeground' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/GameInput.java:56:5: Class 'GameInput' looks like designed for extension (can be subclassed), but the method 'getRounds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInput' final or making the method 'getRounds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:0: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:4: Using the '.*' form of import should be avoided - players.*. [AvoidStarImport]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:13:29: Parameter args should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:25: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:29: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:33: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:37: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:51:33: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/main/Main.java:54: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:10:16: Parameter n should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:10:23: Parameter m should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:10:30: Parameter typeground should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:16:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'Createmap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'Createmap' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:16:21: Name 'Createmap' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:28:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getN' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:32:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getM' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getM' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/map/Map.java:37:5: Class 'Map' looks like designed for extension (can be subclassed), but the method 'getTypeground' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Map' final or making the method 'getTypeground' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:4:19: Parameter pozi should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:4:29: Parameter pozj should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:6:20: '900' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:13:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'levelup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'levelup' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:15:24: '250' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:15:41: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:18:24: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:18:41: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:21:24: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:21:41: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:22:22: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:24:24: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:25:22: '4' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:27:22: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:28:19: '900' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:28:25: '80' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:33:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'Execute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'Execute' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:33:9: Name 'Execute' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:33:17: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:33:32: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:36:18: '200' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:36:24: '30' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:37:23: '20' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:37:25: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:37:26: '+' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:37:27: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:37:28: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:11: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:26: '<' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:27: '<' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:35: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:36: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:36: '100' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:40: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:38:41: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:39:9: '{' at column 9 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:44:40: '0.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:47:40: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:50:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:53:40: '0.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:59:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'Slam' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'Slam' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:59:9: Name 'Slam' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:59:14: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:59:29: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:63:18: '100' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:63:24: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:65:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:68:40: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:71:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:74:40: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:77:40: '0.15f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:83:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'calculatedamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'calculatedamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:83:32: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:83:47: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:83:57: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Knight.java:83:57: Parameter damaged should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:19: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:32: Parameter hp should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:40: Parameter xp should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:48: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:59: Parameter pozi should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:69: Parameter pozj should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:17:79: Parameter dead should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:27:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPosiblehp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPosiblehp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:31:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPosiblehp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPosiblehp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:31:30: Parameter posiblehp should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrignite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrignite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:39:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNrignite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNrignite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:39:29: Parameter nrignite should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:43:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'isIgnited' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'isIgnited' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:47:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setIgnited' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setIgnited' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:47:28: Parameter ignited should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:51:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDmgignite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDmgignite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:55:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDmgignite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDmgignite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:55:30: Parameter dmgignite should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:59:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:61:26: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:62:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:63:30: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:64:30: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:65:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:66:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:67:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:68:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:69:34: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:70:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:71:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:75:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getdamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getdamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:75:27: Parameter damage should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:80:17: 'hp' hides a field. [HiddenField]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:91:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'isStan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'isStan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:95:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setStan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setStan' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:95:25: Parameter stan should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:100:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:104:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:104:25: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:108:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:112:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:112:25: Parameter dead should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:116:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:120:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:120:23: Parameter hp should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:124:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:128:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:128:23: Parameter xp should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:133:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:137:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:137:26: Parameter level should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:141:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPozi' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPozi' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:145:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPozi' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPozi' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:145:25: Parameter pozi should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:149:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getPozj' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getPozj' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:153:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setPozj' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setPozj' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:153:25: Parameter pozj should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:157:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'calculatedamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'calculatedamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:157:32: Parameter player should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:157:47: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:157:52: 'type' hides a field. [HiddenField]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:157:57: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Player.java:157:57: Parameter damaged should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:4:23: Parameter pozi should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:4:33: Parameter pozj should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:5:20: '500' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:11:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'levelup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'levelup' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:13:24: '250' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:13:41: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:16:24: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:16:41: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:19:24: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:19:41: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:20:22: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:22:24: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:23:22: '4' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:25:22: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:26:19: '500' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:26:25: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:32:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'Fireblast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'Fireblast' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:32:16: Name 'Fireblast' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:32:26: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:32:41: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:35:18: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:35:24: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:38:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:41:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:44:40: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:47:40: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:50:40: '0.25f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:56:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'Ignite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'Ignite' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:56:16: Name 'Ignite' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:56:23: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:56:38: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:59:18: '150' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:59:24: '20' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:60:28: '50' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:60:33: '30' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:65:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:68:40: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:71:40: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:74:40: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:77:40: '0.25f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:83:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'calculatedamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'calculatedamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:84:32: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:84:47: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:84:57: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Pyromancer.java:84:57: Parameter damaged should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:4:18: Parameter pozi should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:4:28: Parameter pozj should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:5:20: '600' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:11:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'levelup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'levelup' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:13:24: '250' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:13:41: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:16:24: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:16:41: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:19:24: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:19:41: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:20:22: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:22:24: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:23:22: '4' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:25:22: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:26:19: '600' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Rogue.java:26:25: '40' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:4:19: Parameter pozi should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:4:29: Parameter pozj should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:5:20: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:11:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'levelup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'levelup' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:13:24: '250' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:13:41: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:16:24: '300' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:16:41: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:19:24: '350' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:19:41: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:20:22: '3' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:22:24: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:23:22: '4' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:25:22: Expression can be simplified. [SimplifyBooleanExpression]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:26:19: '400' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:26:25: '30' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:30:1: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'Drain' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'Drain' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:30:12: Name 'Drain' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:30:18: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:30:33: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:31:1: '{' at column 1 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:34:21: '20' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:34:26: '5' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:34:27: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:34:28: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:22: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:23: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:23: '100' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:27: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:28: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:37: '0.3f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:41: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:42: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:35:64: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:37:36: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:40:36: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:43:36: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:46:36: '0.05f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:49:36: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:55:1: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'Deflect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'Deflect' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:55:12: Name 'Deflect' must match pattern '^[a-z][a-zA-Z0-9]*$'. [MethodName]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:55:20: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:55:35: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:55:45: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:55:45: Parameter damaged should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:56:1: '{' at column 1 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:60:7: 'if' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:61:5: '{' at column 5 should be on the previous line. [LeftCurly]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:64:21: '35' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:64:26: '5' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:64:27: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:64:28: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:65:22: '/' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:65:23: '/' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:65:23: '100' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:65:27: '*' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:65:28: '*' is not followed by whitespace. [WhitespaceAround]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:67:36: '0.2f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:70:36: '0.3f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:73:36: '0.4f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:76:36: '0.1f' is a magic number. [MagicNumber]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:82:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'calculatedamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'calculatedamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:82:32: Parameter victim should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:82:47: Parameter type should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:82:57: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:82:57: Parameter damaged should be final. [FinalParameters]
[ERROR] /mnt/c/Users/Alex/Desktop/Facultate/poo/git/Proiect1/etapa1/src/players/Wizard.java:84:59: ',' is not followed by whitespace. [WhitespaceAfter]
Audit done.
Checkstyle ends with 340 errors.
